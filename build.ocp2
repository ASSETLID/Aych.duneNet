(* Disable to compile without the sources of Tezos.
   The following features with be disabled:
   * Decompilation of Michelson files
   * Execution of Michelson contracts
*)

Sys = module("ocp-build:Sys", "1.0");

(* This value is used if with_tezos is not set before *)
default_with_tezos = Sys.file_exists("tezos/README.md");

try { with_tezos = with_tezos; }
  catch("unknown-variable",x){ with_tezos = default_with_tezos; }

(* By default, liquidity will contain some version information
  (Git commit, build date, etc.). However, during development, it
  makes recompilation slower, so you can create a file DEVEL here
  to tell ocp-build not to include version information.
  The flag can also be controled in an inclusing project by using
  the 'with_version' option.
*)

default_with_version = !Sys.file_exists("DEVEL");

try { with_version = with_version; }
  catch("unknown-variable",x){ with_version = default_with_version; }

default_for_javascript = false;

try { for_javascript = for_javascript; }
  catch("unknown-variable",x){ for_javascript = default_for_javascript; }

ojt_dir = "tezos/vendors/ocplib-json-typed/";

OCaml.library("ocplib-json-typed",
        ocaml + {
          files = [
          ojt_dir + "lib_json_typed/json_repr.ml";
          ojt_dir + "lib_json_typed/json_query.ml";
          ojt_dir + "lib_json_typed/json_schema.ml";
          ojt_dir + "lib_json_typed/json_encoding.ml";
          ];
          requires = '[
                   ezjsonm
                   ocplib-endian
                   uri
          ];
          }
   );


OCaml.library("ocplib-json-typed-bson",
        ocaml + {
          files = [
             ojt_dir + "lib_json_typed_bson/json_repr_bson.ml";
          ];
          requires = '[
                   ocplib-json-typed
                   ocplib-endian
          ];
          }
   );

